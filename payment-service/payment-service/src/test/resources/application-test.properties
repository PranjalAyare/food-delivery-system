# src/test/resources/application-test.properties
# This configuration is applied during tests to isolate the application context.

# Disable Eureka client for faster and more isolated tests
eureka.client.enabled=false
spring.cloud.discovery.enabled=false

# Configure an in-memory database (H2) and exclude real database auto-configuration for tests.
# This prevents the test context from attempting to connect to an external MySQL database.
spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration,org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration
spring.datasource.url=jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
spring.datasource.username=sa
spring.datasource.password=
spring.jpa.hibernate.ddl-auto=create-drop

# JWT Secret for testing environment (MUST be present for JwtFilter to initialize)
jwt.secret=super-secret-key-for-jwt-signing-must-be-strong-12345
stripe.secret.key=sk_test_51NvEywSEE5Ljd1JAIfGr4g1cpk36fEpXXwKnxGBEhcI4zku4CDHMKKQNKeXT7DlK5hAIjgo3e5cw9u38qLT5XQh800dwe2UONw

# JWT token for the MonitoringService in test environment (if it's active in tests)
# This token value is used by @Value("${monitoring.jwt.token:dummy-jwt-token-for-monitoring}")
# You should replace 'dummy-jwt-token-for-monitoring' in the MonitoringService.java with a real token
# obtained from your auth-service if you intend to run the MonitoringService with actual JWT validation in a test setup.
# For unit/slice tests of the controller/service, this property is typically not directly used unless the monitor itself is tested.
monitoring.jwt.token=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJyZWd1bGFyX3VzZXJAZXhhbXBsZS5jb20iLCJyb2xlIjoiVVNFUiIsInVzZXJJZCI6MTYsImlhdCI6MTc1MTIxMDEwNywiZXhwIjoxNzUxMjEzNzA3fQ.j_iqqs_YRGwyFA68jGi5KCaedv1pjuPAR09lhAufL6E
